[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "odoo18-mcp-integration"
version = "0.1.0"
description = "Dynamic Odoo 18 integration with MCP"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Veracious Perfect CS Pvt Ltd", email = "info@vperfectcs.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    # Core dependencies
    "pydantic>=2.0.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.22.0",
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
    "mcp>=0.1.0",  # Aligned with requirements.txt
    "sqlparse>=0.4.4",
    
    # Database dependencies
    "pandas>=1.5.0,<2.0.0",  # Using pandas 1.x for compatibility with Python 3.12
    "psycopg2-binary>=2.9.5",  # Added for database connectivity
    
    # RAG tool dependencies
    "sentence-transformers>=2.2.2",  # Added for Odoo documentation retriever
    "torch>=2.2.0,<=2.2.2",  # Specify a compatible PyTorch version
    "faiss-cpu>=1.7.4",
    "beautifulsoup4>=4.12.2",
    "markdown>=3.4.3",
    "gitpython>=3.1.30",
    "numpy>=1.26.0,<2.0.0",  # Using numpy 1.x for compatibility with Python 3.12
    
    # LangChain and LangGraph dependencies
    "langchain>=0.0.300",
    "langchain_openai>=0.0.2",
    "langchain_google_genai>=0.0.5",
    "langchain_anthropic>=0.1.1",
    "google-generativeai>=0.3.0",  # For Gemini integration in RAG tool and LangGraph
    "langgraph>=0.0.15",
    "ollama>=0.1.0",  # For Ollama integration
    "aiohttp>=3.8.5",  # For async HTTP requests
    
    # Graph visualization dependencies
    "ipython>=8.12.0",  # For IPython.display
    "graphviz>=0.20.1",  # For graph visualization
    "pygraphviz>=1.10",  # For advanced graph visualization
    "mermaid-magic>=0.1.0",  # For mermaid diagram support
    "ipykernel==6.29.5", # For Jupyter notebook support
    "pyppeteer>=1.0.2",  # For mermaid diagram rendering with NPX
    
    # Streamlit UI dependencies
    "streamlit>=1.30.0",
    "streamlit-extras>=0.3.0",
    # Pytest dependencies
    "pytest>=7.3.1",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "pytest-timeout>=2.1.0",
    "pytest-xdist>=3.3.1"
]

[project.optional-dependencies]
dev = [
    "black>=23.3.0",
    "isort>=5.12.0",
    "mypy>=1.3.0",
    "pytest>=7.3.1",
    "pytest-cov>=4.1.0",
]
cli = [
    "mcp[cli]>=1.7.0",
]
streamlit = [
    "streamlit>=1.30.0",
    "streamlit-extras>=0.3.0",
    "mcp>=1.7.0",
    "langgraph>=0.0.15",
    "ipython>=8.12.0",
    "graphviz>=0.20.1",
    "pygraphviz>=1.10",
    "mermaid-magic>=0.1.0",
]

[project.urls]
"Homepage" = "https://github.com/infovpcs/odoo18-mcp-integration"
"Bug Tracker" = "https://github.com/infovpcs/odoo18-mcp-integration/issues"

[tool.black]
line-length = 88
target-version = ["py310", "py311", "py312"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
pythonpath = ["src"]
asyncio_mode = "auto"